version: "3.7"

volumes:
  pg-data:

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: midnighter/starlette-delay:latest
    ports:
    - "${API_PORT:-8000}:8000"
    volumes:
    - ".:/app/"
    - "./data:/data"
    depends_on:
    - db
    environment:
    - POSTGRES_URL=${POSTGRES_URL:-postgresql://postgres:secret@db:5432/postgres}
#    - PYTHONASYNCIODEBUG=1
#    - PYTHONWARNINGS=default
#    command: uvicorn --host 0.0.0.0 --access-log --reload --log-level debug app:app

  manager:
    build:
      context: .
      dockerfile: Dockerfile.locust
    image: midnighter/locust-timescale:1.0.3
    ports:
    - "${WEB_PORT:-8089}:8089"
    volumes:
    - "./locust:/mnt/locust"
    - "./data:/data"
    depends_on:
    - web
    - db
    environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
    command: >
      -f /mnt/locust/locustfile.py
      --master
      --host http://web:${API_PORT:-8000}
      --users 200
      --hatch-rate 50
      --run-time 180s
      --headless
      --print-stats
      --step-load
      --step-users 20
      --step-time 15s

  worker:
    build:
      context: .
      dockerfile: Dockerfile.locust
    image: midnighter/locust-timescale:1.0.3
    volumes:
    - "./locust:/mnt/locust"
    depends_on:
    - manager
    - db
    environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
    command: >
      -f /mnt/locust/locustfile.py
      --worker
      --master-host manager

  db:
    image: timescale/timescaledb:latest-pg12-oss
    user: postgres
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 10s
      retries: 12
    ports:
    - "${POSTGRES_PORT:-5432}:5432"
    volumes:
    - pg-data:/var/lib/postgresql/data
    environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
